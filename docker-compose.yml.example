services:
  misskey:
    build: misskey
    container_name: misskey
    restart: unless-stopped
    networks:
      - internal_network
      - external_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./volumes/misskey-files:/misskey/files
      - ./misskey-default.yml:/misskey/.config/default.yml:ro
      - pg_socket:/var/run/postgresql
      - misskey_socket:/var/run/misskey

  db:
    image: postgres:15
    container_name: misskey-db
    restart: unless-stopped
    env_file:
      db.env
    networks:
      - internal_network
    volumes:
      - ./volumes/postgresql-data:/var/lib/postgresql/data
      - pg_socket:/var/run/postgresql
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  redis:
    restart: always
    image: redis:7-alpine
    volumes:
      - ./volumes/redis-data:/data
    networks:
      - internal_network
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./volumes/certbot/conf:/etc/letsencrypt:ro
      - ./volumes/certbot/www:/var/www/certbot:ro
      - misskey_socket:/var/run/misskey
    networks:
      - external_network2

  certbot:
    image: certbot/certbot
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
    entrypoint: "sleep infinity"
    networks:
      - external_network2

  #cloudflared:
  #  image: cloudflare/cloudflared:latest
  #  container_name: misskey-cloudflared
  #  networks:
  #    - external_network
  #  restart: unless-stopped
  #  command: tunnel run
  #  env_file:
  #    - cloudflare.env
  #  volumes:
  #    - misskey_socket:/var/run/misskey

volumes:
  pg_socket:
  misskey_socket:

networks:
  internal_network:
    internal: true
  external_network:
  external_network2:
