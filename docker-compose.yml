services:
  misskey:
    build: misskey
    container_name: misskey
    restart: unless-stopped
    networks:
      - internal_network
      - external_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./files:/misskey/files
      - ./misskey-default.yml:/misskey/.config/default.yml:ro
      - pg_socket:/var/run/postgresql
      - misskey_socket:/var/run/misskey

  db:
    image: postgres:15
    container_name: misskey-db
    restart: unless-stopped
    env_file:
      db.env
    networks:
      - internal_network
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - pg_socket:/var/run/postgresql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  redis:
    restart: always
    image: redis:7-alpine
    volumes:
      - ./redis_data:/data
    networks:
      - internal_network
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: misskey-cloudflared
    networks:
      - external_network
    restart: unless-stopped
    command: tunnel run
    env_file:
      - cloudflare.env
    volumes:
      - misskey_socket:/var/run/misskey

volumes:
  pg_socket:
  misskey_socket:

networks:
  internal_network:
    internal: true
  external_network:
